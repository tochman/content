["Markdown\n========\n\nVersion 1.0.1 - Tue 14 Dec 2004\n\nby John Gruber  \n<http://daringfireball.net/>\n\n\nIntroduction\n------------\n\nMarkdown is a text-to-HTML conversion tool for web writers. Markdown\nallows you to write using an easy-to-read, easy-to-write plain text\nformat, then convert it to structurally valid XHTML (or HTML).\n\nThus, \"Markdown\" is two things: a plain text markup syntax, and a\nsoftware tool, written in Perl, that converts the plain text markup \nto HTML.\n\nMarkdown works both as a Movable Type plug-in and as a standalone Perl\nscript -- which means it can also be used as a text filter in BBEdit\n(or any other application that supporst filters written in Perl).\n\nFull documentation of Markdown's syntax and configuration options is\navailable on the web: <http://daringfireball.net/projects/markdown/>.\n(Note: this readme file is formatted in Markdown.)\n\n\n\nInstallation and Requirements\n-----------------------------\n\nMarkdown requires Perl 5.6.0 or later. Welcome to the 21st Century.\nMarkdown also requires the standard Perl library module `Digest::MD5`. \n\n\n### Movable Type ###\n\nMarkdown works with Movable Type version 2.6 or later (including \nMT 3.0 or later).\n\n1.  Copy the \"Markdown.pl\" file into your Movable Type \"plugins\"\n    directory. The \"plugins\" directory should be in the same directory\n    as \"mt.cgi\"; if the \"plugins\" directory doesn't already exist, use\n    your FTP program to create it. Your installation should look like\n    this:\n\n        (mt home)/plugins/Markdown.pl\n\n2.  Once installed, Markdown will appear as an option in Movable Type's\n    Text Formatting pop-up menu. This is selectable on a per-post basis.\n    Markdown translates your posts to HTML when you publish; the posts\n    themselves are stored in your MT database in Markdown format.\n\n3.  If you also install SmartyPants 1.5 (or later), Markdown will offer\n    a second text formatting option: \"Markdown with SmartyPants\". This\n    option is the same as the regular \"Markdown\" formatter, except that\n    automatically uses SmartyPants to create typographically correct\n    curly quotes, em-dashes, and ellipses. See the SmartyPants web page\n    for more information: <http://daringfireball.net/projects/smartypants/>\n\n4.  To make Markdown (or \"Markdown with SmartyPants\") your default\n    text formatting option for new posts, go to Weblog Config ->\n    Preferences.\n\nNote that by default, Markdown produces XHTML output. To configure\nMarkdown to produce HTML 4 output, see \"Configuration\", below.\n\n\n### Blosxom ###\n\nMarkdown works with Blosxom version 2.x.\n\n1.  Rename the \"Markdown.pl\" plug-in to \"Markdown\" (case is\n    important). Movable Type requires plug-ins to have a \".pl\"\n    extension; Blosxom forbids it.\n\n2.  Copy the \"Markdown\" plug-in file to your Blosxom plug-ins folder.\n    If you're not sure where your Blosxom plug-ins folder is, see the\n    Blosxom documentation for information.\n\n3.  That's it. The entries in your weblog will now automatically be\n    processed by Markdown.\n\n4.  If you'd like to apply Markdown formatting only to certain posts,\n    rather than all of them, see Jason Clark's instructions for using\n    Markdown in conjunction with Blosxom's Meta plugin:\n    \n    <http://jclark.org/weblog/WebDev/Blosxom/Markdown.html>\n\n\n### BBEdit ###\n\nMarkdown works with BBEdit 6.1 or later on Mac OS X. (It also works\nwith BBEdit 5.1 or later and MacPerl 5.6.1 on Mac OS 8.6 or later.)\n\n1.  Copy the \"Markdown.pl\" file to appropriate filters folder in your\n    \"BBEdit Support\" folder. On Mac OS X, this should be:\n\n        BBEdit Support/Unix Support/Unix Filters/\n\n    See the BBEdit documentation for more details on the location of\n    these folders.\n\n    You can rename \"Markdown.pl\" to whatever you wish.\n\n2.  That's it. To use Markdown, select some text in a BBEdit document,\n    then choose Markdown from the Filters sub-menu in the \"#!\" menu, or\n    the Filters floating palette\n\n\n\nConfiguration\n-------------\n\nBy default, Markdown produces XHTML output for tags with empty elements.\nE.g.:\n\n    <br />\n\nMarkdown can be configured to produce HTML-style tags; e.g.:\n\n    <br>\n\n\n### Movable Type ###\n\nYou need to use a special `MTMarkdownOptions` container tag in each\nMovable Type template where you want HTML 4-style output:\n\n    <MTMarkdownOptions output='html4'>\n        ... put your entry content here ...\n    </MTMarkdownOptions>\n\nThe easiest way to use MTMarkdownOptions is probably to put the\nopening tag right after your `<body>` tag, and the closing tag right\nbefore `</body>`.\n\nTo suppress Markdown processing in a particular template, i.e. to\npublish the raw Markdown-formatted text without translation into\n(X)HTML, set the `output` attribute to 'raw':\n\n    <MTMarkdownOptions output='raw'>\n        ... put your entry content here ...\n    </MTMarkdownOptions>\n\n\n### Command-Line ###\n\nUse the `--html4tags` command-line switch to produce HTML output from a\nUnix-style command line. E.g.:\n\n    % perl Markdown.pl --html4tags foo.text\n\nType `perldoc Markdown.pl`, or read the POD documentation within the\nMarkdown.pl source code for more information.\n\n\n\nBugs\n----\n\nTo file bug reports or feature requests please send email to:\nmarkdown@daringfireball.net.\n\n\n\nVersion History\n---------------\n\n1.0.1 (14 Dec 2004):\n\n+\tChanged the syntax rules for code blocks and spans. Previously,\n\tbackslash escapes for special Markdown characters were processed\n\teverywhere other than within inline HTML tags. Now, the contents\n\tof code blocks and spans are no longer processed for backslash\n\tescapes. This means that code blocks and spans are now treated\n\tliterally, with no special rules to worry about regarding\n\tbackslashes.\n\n\t**NOTE**: This changes the syntax from all previous versions of\n\tMarkdown. Code blocks and spans involving backslash characters\n\twill now generate different output than before.\n\n+\tTweaked the rules for link definitions so that they must occur\n\twithin three spaces of the left margin. Thus if you indent a link\n\tdefinition by four spaces or a tab, it will now be a code block.\n\t\n\t\t   [a]: /url/  \"Indented 3 spaces, this is a link def\"\n\n\t\t    [b]: /url/  \"Indented 4 spaces, this is a code block\"\n\t\n\t**IMPORTANT**: This may affect existing Markdown content if it\n\tcontains link definitions indented by 4 or more spaces.\n\n+\tAdded `>`, `+`, and `-` to the list of backslash-escapable\n\tcharacters. These should have been done when these characters\n\twere added as unordered list item markers.\n\n+\tTrailing spaces and tabs following HTML comments and `<hr/>` tags\n\tare now ignored.\n\n+\tInline links using `<` and `>` URL delimiters weren't working:\n\n\t\tlike [this](<http://example.com/>)\n\n+\tAdded a bit of tolerance for trailing spaces and tabs after\n\tMarkdown hr's.\n\n+\tFixed bug where auto-links were being processed within code spans:\n\n\t\tlike this: `<http://example.com/>`\n\n+\tSort-of fixed a bug where lines in the middle of hard-wrapped\n\tparagraphs, which lines look like the start of a list item,\n\twould accidentally trigger the creation of a list. E.g. a\n\tparagraph that looked like this:\n\n\t\tI recommend upgrading to version\n\t\t8. Oops, now this line is treated\n\t\tas a sub-list.\n\n\tThis is fixed for top-level lists, but it can still happen for\n\tsub-lists. E.g., the following list item will not be parsed\n\tproperly:\n\n\t\t+\tI recommend upgrading to version\n\t\t\t8. Oops, now this line is treated\n\t\t\tas a sub-list.\n\n\tGiven Markdown's list-creation rules, I'm not sure this can\n\tbe fixed.\n\n+\tStandalone HTML comments are now handled; previously, they'd get\n\twrapped in a spurious `<p>` tag.\n\n+\tFix for horizontal rules preceded by 2 or 3 spaces.\n\n+\t`<hr>` HTML tags in must occur within three spaces of left\n\tmargin. (With 4 spaces or a tab, they should be code blocks, but\n\tweren't before this fix.)\n\n+\tCapitalized \"With\" in \"Markdown With SmartyPants\" for\n\tconsistency with the same string label in SmartyPants.pl.\n\t(This fix is specific to the MT plug-in interface.)\n\n+\tAuto-linked email address can now optionally contain\n\ta 'mailto:' protocol. I.e. these are equivalent:\n\n\t\t<mailto:user@example.com>\n\t\t<user@example.com>\n\n+\tFixed annoying bug where nested lists would wind up with\n\tspurious (and invalid) `<p>` tags.\n\n+\tYou can now write empty links:\n\n\t\t[like this]()\n\n\tand they'll be turned into anchor tags with empty href attributes.\n\tThis should have worked before, but didn't.\n\n+\t`***this***` and `___this___` are now turned into\n\n\t\t<strong><em>this</em></strong>\n\n\tInstead of\n\n\t\t<strong><em>this</strong></em>\n\n\twhich isn't valid. (Thanks to Michel Fortin for the fix.)\n\n+\tAdded a new substitution in `_EncodeCode()`: s/\\$/&#036;/g; This\n\tis only for the benefit of Blosxom users, because Blosxom\n\t(sometimes?) interpolates Perl scalars in your article bodies.\n\n+\tFixed problem for links defined with urls that include parens, e.g.:\n\n\t\t[1]: http://sources.wikipedia.org/wiki/Middle_East_Policy_(Chomsky)\n\n\t\"Chomsky\" was being erroneously treated as the URL's title.\n\n+\tAt some point during 1.0's beta cycle, I changed every sub's\n\targument fetching from this idiom:\n\n\t\tmy $text = shift;\n\n\tto:\n\n\t\tmy $text = shift || return '';\n\n\tThe idea was to keep Markdown from doing any work in a sub\n\tif the input was empty. This introduced a bug, though:\n\tif the input to any function was the single-character string\n\t\"0\", it would also evaluate as false and return immediately.\n\tHow silly. Now fixed.\n\n\n\nDonations\n---------\n\nDonations to support Markdown's development are happily accepted. See:\n<http://daringfireball.net/projects/markdown/> for details.\n\n\n\nCopyright and License\n---------------------\n\nCopyright (c) 2003-2004 John Gruber   \n<http://daringfireball.net/>   \nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n* Redistributions of source code must retain the above copyright notice,\n  this list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright\n  notice, this list of conditions and the following disclaimer in the\n  documentation and/or other materials provided with the distribution.\n\n* Neither the name \"Markdown\" nor the names of its contributors may\n  be used to endorse or promote products derived from this software\n  without specific prior written permission.\n\nThis software is provided by the copyright holders and contributors \"as\nis\" and any express or implied warranties, including, but not limited\nto, the implied warranties of merchantability and fitness for a\nparticular purpose are disclaimed. In no event shall the copyright owner\nor contributors be liable for any direct, indirect, incidental, special,\nexemplary, or consequential damages (including, but not limited to,\nprocurement of substitute goods or services; loss of use, data, or\nprofits; or business interruption) however caused and on any theory of\nliability, whether in contract, strict liability, or tort (including\nnegligence or otherwise) arising in any way out of the use of this\nsoftware, even if advised of the possibility of such damage.\n", "Markdown\n========\n\nVersion 1.0.1 - Tue 14 Dec 2004\n\nby John Gruber  \n<http://daringfireball.net/>\n\n\nIntroduction\n------------\n\nMarkdown is a text-to-HTML conversion tool for web writers. Markdown\nallows you to write using an easy-to-read, easy-to-write plain text\nformat, then convert it to structurally valid XHTML (or HTML).\n\nThus, \"Markdown\" is two things: a plain text markup syntax, and a\nsoftware tool, written in Perl, that converts the plain text markup \nto HTML.\n\nMarkdown works both as a Movable Type plug-in and as a standalone Perl\nscript -- which means it can also be used as a text filter in BBEdit\n(or any other application that supporst filters written in Perl).\n\nFull documentation of Markdown's syntax and configuration options is\navailable on the web: <http://daringfireball.net/projects/markdown/>.\n(Note: this readme file is formatted in Markdown.)\n\n\n\nInstallation and Requirements\n-----------------------------\n\nMarkdown requires Perl 5.6.0 or later. Welcome to the 21st Century.\nMarkdown also requires the standard Perl library module `Digest::MD5`. \n\n\n### Movable Type ###\n\nMarkdown works with Movable Type version 2.6 or later (including \nMT 3.0 or later).\n\n1.  Copy the \"Markdown.pl\" file into your Movable Type \"plugins\"\n    directory. The \"plugins\" directory should be in the same directory\n    as \"mt.cgi\"; if the \"plugins\" directory doesn't already exist, use\n    your FTP program to create it. Your installation should look like\n    this:\n\n        (mt home)/plugins/Markdown.pl\n\n2.  Once installed, Markdown will appear as an option in Movable Type's\n    Text Formatting pop-up menu. This is selectable on a per-post basis.\n    Markdown translates your posts to HTML when you publish; the posts\n    themselves are stored in your MT database in Markdown format.\n\n3.  If you also install SmartyPants 1.5 (or later), Markdown will offer\n    a second text formatting option: \"Markdown with SmartyPants\". This\n    option is the same as the regular \"Markdown\" formatter, except that\n    automatically uses SmartyPants to create typographically correct\n    curly quotes, em-dashes, and ellipses. See the SmartyPants web page\n    for more information: <http://daringfireball.net/projects/smartypants/>\n\n4.  To make Markdown (or \"Markdown with SmartyPants\") your default\n    text formatting option for new posts, go to Weblog Config ->\n    Preferences.\n\nNote that by default, Markdown produces XHTML output. To configure\nMarkdown to produce HTML 4 output, see \"Configuration\", below.\n\n\n### Blosxom ###\n\nMarkdown works with Blosxom version 2.x.\n\n1.  Rename the \"Markdown.pl\" plug-in to \"Markdown\" (case is\n    important). Movable Type requires plug-ins to have a \".pl\"\n    extension; Blosxom forbids it.\n\n2.  Copy the \"Markdown\" plug-in file to your Blosxom plug-ins folder.\n    If you're not sure where your Blosxom plug-ins folder is, see the\n    Blosxom documentation for information.\n\n3.  That's it. The entries in your weblog will now automatically be\n    processed by Markdown.\n\n4.  If you'd like to apply Markdown formatting only to certain posts,\n    rather than all of them, see Jason Clark's instructions for using\n    Markdown in conjunction with Blosxom's Meta plugin:\n    \n    <http://jclark.org/weblog/WebDev/Blosxom/Markdown.html>\n\n\n### BBEdit ###\n\nMarkdown works with BBEdit 6.1 or later on Mac OS X. (It also works\nwith BBEdit 5.1 or later and MacPerl 5.6.1 on Mac OS 8.6 or later.)\n\n1.  Copy the \"Markdown.pl\" file to appropriate filters folder in your\n    \"BBEdit Support\" folder. On Mac OS X, this should be:\n\n        BBEdit Support/Unix Support/Unix Filters/\n\n    See the BBEdit documentation for more details on the location of\n    these folders.\n\n    You can rename \"Markdown.pl\" to whatever you wish.\n\n2.  That's it. To use Markdown, select some text in a BBEdit document,\n    then choose Markdown from the Filters sub-menu in the \"#!\" menu, or\n    the Filters floating palette\n\n\n\nConfiguration\n-------------\n\nBy default, Markdown produces XHTML output for tags with empty elements.\nE.g.:\n\n    <br />\n\nMarkdown can be configured to produce HTML-style tags; e.g.:\n\n    <br>\n\n\n### Movable Type ###\n\nYou need to use a special `MTMarkdownOptions` container tag in each\nMovable Type template where you want HTML 4-style output:\n\n    <MTMarkdownOptions output='html4'>\n        ... put your entry content here ...\n    </MTMarkdownOptions>\n\nThe easiest way to use MTMarkdownOptions is probably to put the\nopening tag right after your `<body>` tag, and the closing tag right\nbefore `</body>`.\n\nTo suppress Markdown processing in a particular template, i.e. to\npublish the raw Markdown-formatted text without translation into\n(X)HTML, set the `output` attribute to 'raw':\n\n    <MTMarkdownOptions output='raw'>\n        ... put your entry content here ...\n    </MTMarkdownOptions>\n\n\n### Command-Line ###\n\nUse the `--html4tags` command-line switch to produce HTML output from a\nUnix-style command line. E.g.:\n\n    % perl Markdown.pl --html4tags foo.text\n\nType `perldoc Markdown.pl`, or read the POD documentation within the\nMarkdown.pl source code for more information.\n\n\n\nBugs\n----\n\nTo file bug reports or feature requests please send email to:\nmarkdown@daringfireball.net.\n\n\n\nVersion History\n---------------\n\n1.0.1 (14 Dec 2004):\n\n+\tChanged the syntax rules for code blocks and spans. Previously,\n\tbackslash escapes for special Markdown characters were processed\n\teverywhere other than within inline HTML tags. Now, the contents\n\tof code blocks and spans are no longer processed for backslash\n\tescapes. This means that code blocks and spans are now treated\n\tliterally, with no special rules to worry about regarding\n\tbackslashes.\n\n\t**NOTE**: This changes the syntax from all previous versions of\n\tMarkdown. Code blocks and spans involving backslash characters\n\twill now generate different output than before.\n\n+\tTweaked the rules for link definitions so that they must occur\n\twithin three spaces of the left margin. Thus if you indent a link\n\tdefinition by four spaces or a tab, it will now be a code block.\n\t\n\t\t   [a]: /url/  \"Indented 3 spaces, this is a link def\"\n\n\t\t    [b]: /url/  \"Indented 4 spaces, this is a code block\"\n\t\n\t**IMPORTANT**: This may affect existing Markdown content if it\n\tcontains link definitions indented by 4 or more spaces.\n\n+\tAdded `>`, `+`, and `-` to the list of backslash-escapable\n\tcharacters. These should have been done when these characters\n\twere added as unordered list item markers.\n\n+\tTrailing spaces and tabs following HTML comments and `<hr/>` tags\n\tare now ignored.\n\n+\tInline links using `<` and `>` URL delimiters weren't working:\n\n\t\tlike [this](<http://example.com/>)\n\n+\tAdded a bit of tolerance for trailing spaces and tabs after\n\tMarkdown hr's.\n\n+\tFixed bug where auto-links were being processed within code spans:\n\n\t\tlike this: `<http://example.com/>`\n\n+\tSort-of fixed a bug where lines in the middle of hard-wrapped\n\tparagraphs, which lines look like the start of a list item,\n\twould accidentally trigger the creation of a list. E.g. a\n\tparagraph that looked like this:\n\n\t\tI recommend upgrading to version\n\t\t8. Oops, now this line is treated\n\t\tas a sub-list.\n\n\tThis is fixed for top-level lists, but it can still happen for\n\tsub-lists. E.g., the following list item will not be parsed\n\tproperly:\n\n\t\t+\tI recommend upgrading to version\n\t\t\t8. Oops, now this line is treated\n\t\t\tas a sub-list.\n\n\tGiven Markdown's list-creation rules, I'm not sure this can\n\tbe fixed.\n\n+\tStandalone HTML comments are now handled; previously, they'd get\n\twrapped in a spurious `<p>` tag.\n\n+\tFix for horizontal rules preceded by 2 or 3 spaces.\n\n+\t`<hr>` HTML tags in must occur within three spaces of left\n\tmargin. (With 4 spaces or a tab, they should be code blocks, but\n\tweren't before this fix.)\n\n+\tCapitalized \"With\" in \"Markdown With SmartyPants\" for\n\tconsistency with the same string label in SmartyPants.pl.\n\t(This fix is specific to the MT plug-in interface.)\n\n+\tAuto-linked email address can now optionally contain\n\ta 'mailto:' protocol. I.e. these are equivalent:\n\n\t\t<mailto:user@example.com>\n\t\t<user@example.com>\n\n+\tFixed annoying bug where nested lists would wind up with\n\tspurious (and invalid) `<p>` tags.\n\n+\tYou can now write empty links:\n\n\t\t[like this]()\n\n\tand they'll be turned into anchor tags with empty href attributes.\n\tThis should have worked before, but didn't.\n\n+\t`***this***` and `___this___` are now turned into\n\n\t\t<strong><em>this</em></strong>\n\n\tInstead of\n\n\t\t<strong><em>this</strong></em>\n\n\twhich isn't valid. (Thanks to Michel Fortin for the fix.)\n\n+\tAdded a new substitution in `_EncodeCode()`: s/\\$/&#036;/g; This\n\tis only for the benefit of Blosxom users, because Blosxom\n\t(sometimes?) interpolates Perl scalars in your article bodies.\n\n+\tFixed problem for links defined with urls that include parens, e.g.:\n\n\t\t[1]: http://sources.wikipedia.org/wiki/Middle_East_Policy_(Chomsky)\n\n\t\"Chomsky\" was being erroneously treated as the URL's title.\n\n+\tAt some point during 1.0's beta cycle, I changed every sub's\n\targument fetching from this idiom:\n\n\t\tmy $text = shift;\n\n\tto:\n\n\t\tmy $text = shift || return '';\n\n\tThe idea was to keep Markdown from doing any work in a sub\n\tif the input was empty. This introduced a bug, though:\n\tif the input to any function was the single-character string\n\t\"0\", it would also evaluate as false and return immediately.\n\tHow silly. Now fixed.\n\n\n\nDonations\n---------\n\nDonations to support Markdown's development are happily accepted. See:\n<http://daringfireball.net/projects/markdown/> for details.\n\n\n\nCopyright and License\n---------------------\n\nCopyright (c) 2003-2004 John Gruber   \n<http://daringfireball.net/>   \nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n* Redistributions of source code must retain the above copyright notice,\n  this list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright\n  notice, this list of conditions and the following disclaimer in the\n  documentation and/or other materials provided with the distribution.\n\n* Neither the name \"Markdown\" nor the names of its contributors may\n  be used to endorse or promote products derived from this software\n  without specific prior written permission.\n\nThis software is provided by the copyright holders and contributors \"as\nis\" and any express or implied warranties, including, but not limited\nto, the implied warranties of merchantability and fitness for a\nparticular purpose are disclaimed. In no event shall the copyright owner\nor contributors be liable for any direct, indirect, incidental, special,\nexemplary, or consequential damages (including, but not limited to,\nprocurement of substitute goods or services; loss of use, data, or\nprofits; or business interruption) however caused and on any theory of\nliability, whether in contract, strict liability, or tort (including\nnegligence or otherwise) arising in any way out of the use of this\nsoftware, even if advised of the possibility of such damage.\n"]